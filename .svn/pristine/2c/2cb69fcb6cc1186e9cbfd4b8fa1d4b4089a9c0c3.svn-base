<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 26 23:54:30 EDT 2016 -->
<title>MazeController</title>
<meta name="date" content="2016-09-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="MazeController";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../falstad/MazeApplication.html" title="class in falstad"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../falstad/MazeFileReader.html" title="class in falstad"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?falstad/MazeController.html" target="_top">Frames</a></li>
<li><a href="MazeController.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">falstad</div>
<h2 title="Class MazeController" class="title">Class MazeController</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>falstad.MazeController</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../generation/Order.html" title="interface in generation">Order</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">MazeController</span>
extends java.lang.Object
implements <a href="../generation/Order.html" title="interface in generation">Order</a></pre>
<div class="block">Class handles the user interaction. 
 It implements a state-dependent behavior that controls the display and reacts to key board input from a user. 
 At this point user keyboard input is first dealt with a key listener (SimpleKeyListener)
 and then handed over to a MazeController object by way of the keyDown method.

 This code is refactored code from Maze.java by Paul Falstad, www.falstad.com, Copyright (C) 1998, all rights reserved
 Paul Falstad granted permission to modify and use code for teaching purposes.
 Refactored by Peter Kemper</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.generation.Order">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;generation.<a href="../generation/Order.html" title="interface in generation">Order</a></h3>
<code><a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a></code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#allVisible">allVisible</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#angle">angle</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#builder">builder</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#deepdebug">deepdebug</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#dx">dx</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#dy">dy</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../generation/Factory.html" title="interface in generation">Factory</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#factory">factory</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#filename">filename</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#mapMode">mapMode</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#mazeConfig">mazeConfig</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#newGame">newGame</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../falstad/MazePanel.html" title="class in falstad">MazePanel</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#panel">panel</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#percentdone">percentdone</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#perfect">perfect</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#px">px</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#py">py</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../falstad/RangeSet.html" title="class in falstad">RangeSet</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#rset">rset</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../generation/Cells.html" title="class in generation">Cells</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#seencells">seencells</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#showMaze">showMaze</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#showSolution">showSolution</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#skill">skill</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#state">state</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#viewdx">viewdx</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#viewdy">viewdy</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.util.ArrayList&lt;<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#views">views</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#viewx">viewx</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#viewy">viewy</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#walkStep">walkStep</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#MazeController--">MazeController</a></span>()</code>
<div class="block">Constructor
 Default setting for maze generating algorithm is DFS.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#MazeController-generation.Order.Builder-">MazeController</a></span>(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</code>
<div class="block">Constructor that also selects a particular generation method</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#MazeController-java.lang.String-">MazeController</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Constructor to read maze from file</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#addView-falstad.Viewer-">addView</a></span>(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</code>
<div class="block">Register a view</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>protected boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#checkMove-int-">checkMove</a></span>(int&nbsp;dir)</code>
<div class="block">Helper method for walk()</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#cleanViews--">cleanViews</a></span>()</code>
<div class="block">Remove obsolete FirstPersonDrawer and MapDrawer</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#dbg-java.lang.String-">dbg</a></span>(java.lang.String&nbsp;str)</code>&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#deliver-generation.MazeConfiguration-">deliver</a></span>(<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;mazeConfig)</code>
<div class="block">Delivers the produced maze.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getBuilder--">getBuilder</a></span>()</code>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>protected <a href="../generation/CardinalDirection.html" title="enum in generation">CardinalDirection</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getCurrentDirection--">getCurrentDirection</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>protected int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getCurrentPosition--">getCurrentPosition</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getMazeConfiguration--">getMazeConfiguration</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>java.awt.Panel</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getPanel--">getPanel</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getPercentDone--">getPercentDone</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getSkillLevel--">getSkillLevel</a></span>()</code>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>protected <a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#getState--">getState</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#init--">init</a></span>()</code>
<div class="block">Method to initialize internal attributes.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>(package private) boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#isInMapMode--">isInMapMode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>(package private) boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#isInShowMazeMode--">isInShowMazeMode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>(package private) boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#isInShowSolutionMode--">isInShowSolutionMode</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#isOutside-int-int-">isOutside</a></span>(int&nbsp;x,
         int&nbsp;y)</code>
<div class="block">checks if the given position is outside the maze</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#isPerfect--">isPerfect</a></span>()</code>
<div class="block">Describes if the ordered maze should be perfect, i.e.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#keyDown-int-">keyDown</a></span>(int&nbsp;key)</code>
<div class="block">Method incorporates all reactions to keyboard input in original code, 
 The simple key listener calls this method to communicate input.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>private <a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#loadMazeConfigurationFromFile-java.lang.String-">loadMazeConfigurationFromFile</a></span>(java.lang.String&nbsp;filename)</code>
<div class="block">Loads maze from file and returns a corresponding maze configuration.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#logPosition--">logPosition</a></span>()</code>&nbsp;</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#notifyViewerDecrementMapScale--">notifyViewerDecrementMapScale</a></span>()</code>
<div class="block">Notify all registered viewers to decrement the map scale</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#notifyViewerIncrementMapScale--">notifyViewerIncrementMapScale</a></span>()</code>
<div class="block">Notify all registered viewers to increment the map scale</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#notifyViewerRedraw--">notifyViewerRedraw</a></span>()</code>
<div class="block">Notify all registered viewers to redraw their graphics</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>(package private) double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#radify-int-">radify</a></span>(int&nbsp;x)</code>&nbsp;</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#removeView-falstad.Viewer-">removeView</a></span>(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</code>
<div class="block">Unregister a view</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#rotate-int-">rotate</a></span>(int&nbsp;dir)</code>
<div class="block">Performs a rotation with 4 intermediate views, 
 updates the screen and the internal direction</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#rotateStep--">rotateStep</a></span>()</code>
<div class="block">Intermediate step during rotation, updates the screen</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setBuilder-generation.Order.Builder-">setBuilder</a></span>(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</code>&nbsp;</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setCurrentDirection-int-int-">setCurrentDirection</a></span>(int&nbsp;x,
                   int&nbsp;y)</code>&nbsp;</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setCurrentPosition-int-int-">setCurrentPosition</a></span>(int&nbsp;x,
                  int&nbsp;y)</code>&nbsp;</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setPerfect-boolean-">setPerfect</a></span>(boolean&nbsp;perfect)</code>&nbsp;</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setSkillLevel-int-">setSkillLevel</a></span>(int&nbsp;skill)</code>&nbsp;</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#setState-falstad.Constants.StateGUI-">setState</a></span>(<a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a>&nbsp;newState)</code>
<div class="block">Sets the internal state of the game state.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#slowedDownRedraw--">slowedDownRedraw</a></span>()</code>
<div class="block">Redraw and wait, used to obtain a smooth appearance for rotate and move operations</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#switchToFinishScreen--">switchToFinishScreen</a></span>()</code>
<div class="block">Switches to title screen, possibly canceling maze generation.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#switchToGeneratingScreen-int-">switchToGeneratingScreen</a></span>(int&nbsp;key)</code>
<div class="block">Switches to generating screen.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#switchToPlayingScreen--">switchToPlayingScreen</a></span>()</code>
<div class="block">Switches to playing state, registers appropriate views, updates screen.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#switchToTitleScreen-boolean-">switchToTitleScreen</a></span>(boolean&nbsp;cancelOrder)</code>
<div class="block">Switches to title screen, possibly canceling maze generation.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#updateProgress-int-">updateProgress</a></span>(int&nbsp;percentage)</code>
<div class="block">Allows external increase to percentage in generating mode.</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../falstad/MazeController.html#walk-int-">walk</a></span>(int&nbsp;dir)</code>
<div class="block">Moves in the given direction with 4 intermediate steps,
 updates the screen and the internal position</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="mazeConfig">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mazeConfig</h4>
<pre>private&nbsp;<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a> mazeConfig</pre>
</li>
</ul>
<a name="views">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>views</h4>
<pre>private final&nbsp;java.util.ArrayList&lt;<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&gt; views</pre>
</li>
</ul>
<a name="panel">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>panel</h4>
<pre>private&nbsp;<a href="../falstad/MazePanel.html" title="class in falstad">MazePanel</a> panel</pre>
</li>
</ul>
<a name="state">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>state</h4>
<pre>private&nbsp;<a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a> state</pre>
</li>
</ul>
<a name="percentdone">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>percentdone</h4>
<pre>private&nbsp;int percentdone</pre>
</li>
</ul>
<a name="showMaze">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>showMaze</h4>
<pre>private&nbsp;boolean showMaze</pre>
</li>
</ul>
<a name="showSolution">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>showSolution</h4>
<pre>private&nbsp;boolean showSolution</pre>
</li>
</ul>
<a name="mapMode">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mapMode</h4>
<pre>private&nbsp;boolean mapMode</pre>
</li>
</ul>
<a name="px">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>px</h4>
<pre>private&nbsp;int px</pre>
</li>
</ul>
<a name="py">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>py</h4>
<pre>private&nbsp;int py</pre>
</li>
</ul>
<a name="dx">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dx</h4>
<pre>private&nbsp;int dx</pre>
</li>
</ul>
<a name="dy">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dy</h4>
<pre>private&nbsp;int dy</pre>
</li>
</ul>
<a name="viewx">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viewx</h4>
<pre>private&nbsp;int viewx</pre>
</li>
</ul>
<a name="viewy">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viewy</h4>
<pre>private&nbsp;int viewy</pre>
</li>
</ul>
<a name="viewdx">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viewdx</h4>
<pre>private&nbsp;int viewdx</pre>
</li>
</ul>
<a name="viewdy">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viewdy</h4>
<pre>private&nbsp;int viewdy</pre>
</li>
</ul>
<a name="angle">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>angle</h4>
<pre>private&nbsp;int angle</pre>
</li>
</ul>
<a name="walkStep">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>walkStep</h4>
<pre>private&nbsp;int walkStep</pre>
</li>
</ul>
<a name="seencells">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>seencells</h4>
<pre>private&nbsp;<a href="../generation/Cells.html" title="class in generation">Cells</a> seencells</pre>
</li>
</ul>
<a name="skill">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>skill</h4>
<pre>private&nbsp;int skill</pre>
</li>
</ul>
<a name="builder">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>builder</h4>
<pre>private&nbsp;<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a> builder</pre>
</li>
</ul>
<a name="perfect">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>perfect</h4>
<pre>private&nbsp;boolean perfect</pre>
</li>
</ul>
<a name="factory">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>factory</h4>
<pre>private&nbsp;<a href="../generation/Factory.html" title="interface in generation">Factory</a> factory</pre>
</li>
</ul>
<a name="filename">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>filename</h4>
<pre>private&nbsp;java.lang.String filename</pre>
</li>
</ul>
<a name="rset">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rset</h4>
<pre>private&nbsp;<a href="../falstad/RangeSet.html" title="class in falstad">RangeSet</a> rset</pre>
</li>
</ul>
<a name="deepdebug">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deepdebug</h4>
<pre>private&nbsp;boolean deepdebug</pre>
</li>
</ul>
<a name="allVisible">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>allVisible</h4>
<pre>private&nbsp;boolean allVisible</pre>
</li>
</ul>
<a name="newGame">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>newGame</h4>
<pre>private&nbsp;boolean newGame</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="MazeController--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController()</pre>
<div class="block">Constructor
 Default setting for maze generating algorithm is DFS.</div>
</li>
</ul>
<a name="MazeController-generation.Order.Builder-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</pre>
<div class="block">Constructor that also selects a particular generation method</div>
</li>
</ul>
<a name="MazeController-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MazeController</h4>
<pre>public&nbsp;MazeController(java.lang.String&nbsp;filename)</pre>
<div class="block">Constructor to read maze from file</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filename</code> - </dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="loadMazeConfigurationFromFile-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadMazeConfigurationFromFile</h4>
<pre>private&nbsp;<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;loadMazeConfigurationFromFile(java.lang.String&nbsp;filename)</pre>
<div class="block">Loads maze from file and returns a corresponding maze configuration.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filename</code> - </dd>
</dl>
</li>
</ul>
<a name="init--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>init</h4>
<pre>public&nbsp;void&nbsp;init()</pre>
<div class="block">Method to initialize internal attributes. Called separately from the constructor.</div>
</li>
</ul>
<a name="getMazeConfiguration--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMazeConfiguration</h4>
<pre>public&nbsp;<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;getMazeConfiguration()</pre>
</li>
</ul>
<a name="getState--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getState</h4>
<pre>protected&nbsp;<a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a>&nbsp;getState()</pre>
</li>
</ul>
<a name="switchToGeneratingScreen-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchToGeneratingScreen</h4>
<pre>private&nbsp;void&nbsp;switchToGeneratingScreen(int&nbsp;key)</pre>
<div class="block">Switches to generating screen. 
 Uses the factory to start the generation of a maze with a background thread.
 This transition is only possible from the title screen.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>key</code> - is user input, gives skill level to determine the width, height and number of rooms for the new maze</dd>
</dl>
</li>
</ul>
<a name="switchToPlayingScreen--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchToPlayingScreen</h4>
<pre>private&nbsp;void&nbsp;switchToPlayingScreen()</pre>
<div class="block">Switches to playing state, registers appropriate views, updates screen.
 This transition is only possible from the generating screen.</div>
</li>
</ul>
<a name="switchToTitleScreen-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchToTitleScreen</h4>
<pre>private&nbsp;void&nbsp;switchToTitleScreen(boolean&nbsp;cancelOrder)</pre>
<div class="block">Switches to title screen, possibly canceling maze generation.
 This transition is possible from several screens.</div>
</li>
</ul>
<a name="switchToFinishScreen--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchToFinishScreen</h4>
<pre>protected&nbsp;void&nbsp;switchToFinishScreen()</pre>
<div class="block">Switches to title screen, possibly canceling maze generation.
 This transition is only possible from the playing screen
 by making a forward or backward move through the exit outside
 of the maze.</div>
</li>
</ul>
<a name="addView-falstad.Viewer-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addView</h4>
<pre>public&nbsp;void&nbsp;addView(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</pre>
<div class="block">Register a view</div>
</li>
</ul>
<a name="removeView-falstad.Viewer-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeView</h4>
<pre>public&nbsp;void&nbsp;removeView(<a href="../falstad/Viewer.html" title="interface in falstad">Viewer</a>&nbsp;view)</pre>
<div class="block">Unregister a view</div>
</li>
</ul>
<a name="cleanViews--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cleanViews</h4>
<pre>private&nbsp;void&nbsp;cleanViews()</pre>
<div class="block">Remove obsolete FirstPersonDrawer and MapDrawer</div>
</li>
</ul>
<a name="notifyViewerRedraw--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>notifyViewerRedraw</h4>
<pre>protected&nbsp;void&nbsp;notifyViewerRedraw()</pre>
<div class="block">Notify all registered viewers to redraw their graphics</div>
</li>
</ul>
<a name="notifyViewerIncrementMapScale--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>notifyViewerIncrementMapScale</h4>
<pre>private&nbsp;void&nbsp;notifyViewerIncrementMapScale()</pre>
<div class="block">Notify all registered viewers to increment the map scale</div>
</li>
</ul>
<a name="notifyViewerDecrementMapScale--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>notifyViewerDecrementMapScale</h4>
<pre>private&nbsp;void&nbsp;notifyViewerDecrementMapScale()</pre>
<div class="block">Notify all registered viewers to decrement the map scale</div>
</li>
</ul>
<a name="isInMapMode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInMapMode</h4>
<pre>boolean&nbsp;isInMapMode()</pre>
</li>
</ul>
<a name="isInShowMazeMode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInShowMazeMode</h4>
<pre>boolean&nbsp;isInShowMazeMode()</pre>
</li>
</ul>
<a name="isInShowSolutionMode--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isInShowSolutionMode</h4>
<pre>boolean&nbsp;isInShowSolutionMode()</pre>
</li>
</ul>
<a name="getPercentDone--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPercentDone</h4>
<pre>public&nbsp;java.lang.String&nbsp;getPercentDone()</pre>
</li>
</ul>
<a name="getPanel--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPanel</h4>
<pre>public&nbsp;java.awt.Panel&nbsp;getPanel()</pre>
</li>
</ul>
<a name="setCurrentPosition-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCurrentPosition</h4>
<pre>protected&nbsp;void&nbsp;setCurrentPosition(int&nbsp;x,
                                  int&nbsp;y)</pre>
</li>
</ul>
<a name="setCurrentDirection-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCurrentDirection</h4>
<pre>private&nbsp;void&nbsp;setCurrentDirection(int&nbsp;x,
                                 int&nbsp;y)</pre>
</li>
</ul>
<a name="getCurrentPosition--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrentPosition</h4>
<pre>protected&nbsp;int[]&nbsp;getCurrentPosition()</pre>
</li>
</ul>
<a name="getCurrentDirection--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCurrentDirection</h4>
<pre>protected&nbsp;<a href="../generation/CardinalDirection.html" title="enum in generation">CardinalDirection</a>&nbsp;getCurrentDirection()</pre>
</li>
</ul>
<a name="dbg-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dbg</h4>
<pre>private&nbsp;void&nbsp;dbg(java.lang.String&nbsp;str)</pre>
</li>
</ul>
<a name="logPosition--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>logPosition</h4>
<pre>private&nbsp;void&nbsp;logPosition()</pre>
</li>
</ul>
<a name="radify-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>radify</h4>
<pre>final&nbsp;double&nbsp;radify(int&nbsp;x)</pre>
</li>
</ul>
<a name="checkMove-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkMove</h4>
<pre>protected&nbsp;boolean&nbsp;checkMove(int&nbsp;dir)</pre>
<div class="block">Helper method for walk()</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dir</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if there is no wall in this direction</dd>
</dl>
</li>
</ul>
<a name="slowedDownRedraw--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>slowedDownRedraw</h4>
<pre>private&nbsp;void&nbsp;slowedDownRedraw()</pre>
<div class="block">Redraw and wait, used to obtain a smooth appearance for rotate and move operations</div>
</li>
</ul>
<a name="rotateStep--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rotateStep</h4>
<pre>private&nbsp;void&nbsp;rotateStep()</pre>
<div class="block">Intermediate step during rotation, updates the screen</div>
</li>
</ul>
<a name="rotate-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rotate</h4>
<pre>private&nbsp;void&nbsp;rotate(int&nbsp;dir)</pre>
<div class="block">Performs a rotation with 4 intermediate views, 
 updates the screen and the internal direction</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dir</code> - for current direction</dd>
</dl>
</li>
</ul>
<a name="walk-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>walk</h4>
<pre>private&nbsp;void&nbsp;walk(int&nbsp;dir)</pre>
<div class="block">Moves in the given direction with 4 intermediate steps,
 updates the screen and the internal position</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dir,</code> - only possible values are 1 (forward) and -1 (backward)</dd>
</dl>
</li>
</ul>
<a name="isOutside-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isOutside</h4>
<pre>private&nbsp;boolean&nbsp;isOutside(int&nbsp;x,
                          int&nbsp;y)</pre>
<div class="block">checks if the given position is outside the maze</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if position is outside, false otherwise</dd>
</dl>
</li>
</ul>
<a name="keyDown-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>keyDown</h4>
<pre>public&nbsp;boolean&nbsp;keyDown(int&nbsp;key)</pre>
<div class="block">Method incorporates all reactions to keyboard input in original code, 
 The simple key listener calls this method to communicate input.</div>
</li>
</ul>
<a name="setSkillLevel-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setSkillLevel</h4>
<pre>protected&nbsp;void&nbsp;setSkillLevel(int&nbsp;skill)</pre>
</li>
</ul>
<a name="setBuilder-generation.Order.Builder-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBuilder</h4>
<pre>private&nbsp;void&nbsp;setBuilder(<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;builder)</pre>
</li>
</ul>
<a name="setPerfect-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPerfect</h4>
<pre>private&nbsp;void&nbsp;setPerfect(boolean&nbsp;perfect)</pre>
</li>
</ul>
<a name="setState-falstad.Constants.StateGUI-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setState</h4>
<pre>protected&nbsp;void&nbsp;setState(<a href="../falstad/Constants.StateGUI.html" title="enum in falstad">Constants.StateGUI</a>&nbsp;newState)</pre>
<div class="block">Sets the internal state of the game state.
 Method checks if state transition is as expected.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newState</code> - the state to set</dd>
</dl>
</li>
</ul>
<a name="getSkillLevel--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSkillLevel</h4>
<pre>public&nbsp;int&nbsp;getSkillLevel()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../generation/Order.html#getSkillLevel--">Order</a></code></span></div>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../generation/Order.html#getSkillLevel--">getSkillLevel</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="getBuilder--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBuilder</h4>
<pre>public&nbsp;<a href="../generation/Order.Builder.html" title="enum in generation">Order.Builder</a>&nbsp;getBuilder()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../generation/Order.html#getBuilder--">Order</a></code></span></div>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../generation/Order.html#getBuilder--">getBuilder</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="isPerfect--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPerfect</h4>
<pre>public&nbsp;boolean&nbsp;isPerfect()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../generation/Order.html#isPerfect--">Order</a></code></span></div>
<div class="block">Describes if the ordered maze should be perfect, i.e. there are 
 no loops and no isolated areas, which also implies that 
 there are no rooms as rooms can imply loops</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../generation/Order.html#isPerfect--">isPerfect</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="deliver-generation.MazeConfiguration-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deliver</h4>
<pre>public&nbsp;void&nbsp;deliver(<a href="../generation/MazeConfiguration.html" title="interface in generation">MazeConfiguration</a>&nbsp;mazeConfig)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../generation/Order.html#deliver-generation.MazeConfiguration-">Order</a></code></span></div>
<div class="block">Delivers the produced maze. 
 This method is called by the factory to provide the 
 resulting maze as a MazeConfiguration.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../generation/Order.html#deliver-generation.MazeConfiguration-">deliver</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
</dl>
</li>
</ul>
<a name="updateProgress-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>updateProgress</h4>
<pre>public&nbsp;void&nbsp;updateProgress(int&nbsp;percentage)</pre>
<div class="block">Allows external increase to percentage in generating mode.
 Internal value is only update if it exceeds the last value and is less or equal 100</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../generation/Order.html#updateProgress-int-">updateProgress</a></code>&nbsp;in interface&nbsp;<code><a href="../generation/Order.html" title="interface in generation">Order</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>percentage</code> - gives the new percentage on a range [0,100]</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../falstad/MazeApplication.html" title="class in falstad"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../falstad/MazeFileReader.html" title="class in falstad"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?falstad/MazeController.html" target="_top">Frames</a></li>
<li><a href="MazeController.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
