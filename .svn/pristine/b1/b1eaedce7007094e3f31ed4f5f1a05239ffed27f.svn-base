<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 26 23:43:25 EDT 2016 -->
<title>SingleRandom</title>
<meta name="date" content="2016-09-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="SingleRandom";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":9,"i1":10,"i2":10,"i3":9};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SingleRandom.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Seg.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/Wall.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/SingleRandom.html" target="_top">Frames</a></li>
<li><a href="SingleRandom.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class SingleRandom" class="title">Class SingleRandom</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>generation.SingleRandom</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public final class <span class="typeNameLabel">SingleRandom</span>
extends java.lang.Object</pre>
<div class="block">This class implements the generation of pseudo random numbers with a single instance of a random number generator.
 It is possible to set the seed of the generator by calling setSeed before the internal random number generator is initialized. 
 This happens when getRandom is called for the first time. Any subsequent call to setSeed resets the seed of the existing generator.
 Design implements Singleton pattern.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Kemper</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.util.Random</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#generator">generator</a></span></code>
<div class="block">internal internal random number generator.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private static <a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#instance">instance</a></span></code>
<div class="block">the single instance of this class.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static java.lang.Object</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#LOCK">LOCK</a></span></code>
<div class="block">lock to make the private constructor thread safe, one could have used the class object as well</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#theSeed">theSeed</a></span></code>
<div class="block">optional: a seed value can be set to be able to reproduce a sequence of random numbers.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#validSeed">validSeed</a></span></code>
<div class="block">optional: flag to show if seed value can be used or not.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier</th>
<th class="colLast" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private </code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#SingleRandom--">SingleRandom</a></span>()</code>
<div class="block">The constructor for a class that allows for a single instance must be private.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>static <a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#getRandom--">getRandom</a></span>()</code>
<div class="block">Delivers an instance of a random number generator.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#nextInt--">nextInt</a></span>()</code>
<div class="block">Delivers a random number.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#nextIntWithinInterval-int-int-">nextIntWithinInterval</a></span>(int&nbsp;lowerBound,
                     int&nbsp;upperBound)</code>
<div class="block">Generate an integer random number in interval [lowerBound,upperBound]</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/SingleRandom.html#setSeed-int-">setSeed</a></span>(int&nbsp;seed)</code>
<div class="block">Prepares the generator to start with a particular seed value.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="generator">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generator</h4>
<pre>private final transient&nbsp;java.util.Random generator</pre>
<div class="block">internal internal random number generator. This should NOT be made accessible.</div>
</li>
</ul>
<a name="instance">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>instance</h4>
<pre>private static&nbsp;<a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a> instance</pre>
<div class="block">the single instance of this class.</div>
</li>
</ul>
<a name="theSeed">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>theSeed</h4>
<pre>private static&nbsp;int theSeed</pre>
<div class="block">optional: a seed value can be set to be able to reproduce a sequence of random numbers.</div>
</li>
</ul>
<a name="validSeed">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>validSeed</h4>
<pre>private static&nbsp;boolean validSeed</pre>
<div class="block">optional: flag to show if seed value can be used or not.</div>
</li>
</ul>
<a name="LOCK">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>LOCK</h4>
<pre>private static final&nbsp;java.lang.Object LOCK</pre>
<div class="block">lock to make the private constructor thread safe, one could have used the class object as well</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="SingleRandom--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>SingleRandom</h4>
<pre>private&nbsp;SingleRandom()</pre>
<div class="block">The constructor for a class that allows for a single instance must be private.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getRandom--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRandom</h4>
<pre>public static&nbsp;<a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a>&nbsp;getRandom()</pre>
<div class="block">Delivers an instance of a random number generator.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>instance of random number generator</dd>
</dl>
</li>
</ul>
<a name="nextInt--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nextInt</h4>
<pre>public&nbsp;int&nbsp;nextInt()</pre>
<div class="block">Delivers a random number.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>random integer value</dd>
</dl>
</li>
</ul>
<a name="nextIntWithinInterval-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nextIntWithinInterval</h4>
<pre>public&nbsp;int&nbsp;nextIntWithinInterval(int&nbsp;lowerBound,
                                 int&nbsp;upperBound)</pre>
<div class="block">Generate an integer random number in interval [lowerBound,upperBound]</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>lowerBound</code> - </dd>
<dd><code>upperBound</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>random number within given range</dd>
</dl>
</li>
</ul>
<a name="setSeed-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setSeed</h4>
<pre>public static&nbsp;void&nbsp;setSeed(int&nbsp;seed)</pre>
<div class="block">Prepares the generator to start with a particular seed value.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>seed</code> - is the seed value for the random number generator</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/SingleRandom.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Seg.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/Wall.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/SingleRandom.html" target="_top">Frames</a></li>
<li><a href="SingleRandom.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
