<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 26 23:54:30 EDT 2016 -->
<title>MazeBuilderEller</title>
<meta name="date" content="2016-09-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="MazeBuilderEller";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeBuilderEller.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/MazeBuilder.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/MazeBuilderEllerTest.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/MazeBuilderEller.html" target="_top">Frames</a></li>
<li><a href="MazeBuilderEller.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class MazeBuilderEller" class="title">Class MazeBuilderEller</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../generation/MazeBuilder.html" title="class in generation">generation.MazeBuilder</a></li>
<li>
<ul class="inheritance">
<li>generation.MazeBuilderEller</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.lang.Runnable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../generation/MazeBuilderEllerTest.html" title="class in generation">MazeBuilderEllerTest</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">MazeBuilderEller</span>
extends <a href="../generation/MazeBuilder.html" title="class in generation">MazeBuilder</a>
implements java.lang.Runnable</pre>
<div class="block">This class has the responsibility to create a maze of given dimensions (width, height) 
 together with a solution based on a distance matrix.
 The MazeBuilder implements Runnable such that it can be run a separate thread.
 The MazeFactory has a MazeBuilder and handles the thread management.   

 
 The maze is built with Eller's algorithm. 
 This means sets in a matrix are merged horizontally and vertically at random, save for certain conditions.
 Pathways are generated by breaking walls between two cells when their sets are merged. 
 Further information under generatePathways() method. Helper methods are used for generatePathways() method.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Tejaswi Darshan Shrestha</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#grid">grid</a></span></code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields.inherited.from.class.generation.MazeBuilder">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;generation.<a href="../generation/MazeBuilder.html" title="class in generation">MazeBuilder</a></h3>
<code><a href="../generation/MazeBuilder.html#cells">cells</a>, <a href="../generation/MazeBuilder.html#dists">dists</a>, <a href="../generation/MazeBuilder.html#height">height</a>, <a href="../generation/MazeBuilder.html#MAX_ROOM_DIMENSION">MAX_ROOM_DIMENSION</a>, <a href="../generation/MazeBuilder.html#MAX_TRIES">MAX_TRIES</a>, <a href="../generation/MazeBuilder.html#MIN_ROOM_DIMENSION">MIN_ROOM_DIMENSION</a>, <a href="../generation/MazeBuilder.html#order">order</a>, <a href="../generation/MazeBuilder.html#random">random</a>, <a href="../generation/MazeBuilder.html#SLEEP_INTERVAL">SLEEP_INTERVAL</a>, <a href="../generation/MazeBuilder.html#startx">startx</a>, <a href="../generation/MazeBuilder.html#starty">starty</a>, <a href="../generation/MazeBuilder.html#width">width</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#MazeBuilderEller--">MazeBuilderEller</a></span>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#MazeBuilderEller-boolean-">MazeBuilderEller</a></span>(boolean&nbsp;det)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#countValues-int:A:A-int-int-">countValues</a></span>(int[][]&nbsp;grid,
           int&nbsp;x,
           int&nbsp;y)</code>
<div class="block">Counts the number of times a value appears in the 2-D mirror grid.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#flipCoin--">flipCoin</a></span>()</code>
<div class="block">Returns a random boolean, either true or false.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#generatePathways--">generatePathways</a></span>()</code>
<div class="block">This method generates pathways into the maze by using Eller's algorithm of randomly merging sets.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>protected int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#getGrid--">getGrid</a></span>()</code>
<div class="block">Helper method to get grid for test cases</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#mergeHorizontally-int:A:A-int-int-">mergeHorizontally</a></span>(int[][]&nbsp;grid,
                 int&nbsp;x,
                 int&nbsp;y)</code>
<div class="block">Performs a horizontal merger of sets, both in the 2-D mirror grid, as well as the actual Maze Cell.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#mergeLastRow-int:A:A-int-int-">mergeLastRow</a></span>(int[][]&nbsp;grid,
            int&nbsp;x,
            int&nbsp;y)</code>
<div class="block">Horizontally merges all the sets in the last row into one single set.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilderEller.html#mergeVertically-int:A:A-int-int-int-">mergeVertically</a></span>(int[][]&nbsp;grid,
               int&nbsp;x,
               int&nbsp;y,
               int&nbsp;count)</code>
<div class="block">Performs a vertical merger of sets, both in the 2-D mirror grid, as well as the actual Maze Cell.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.generation.MazeBuilder">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;generation.<a href="../generation/MazeBuilder.html" title="class in generation">MazeBuilder</a></h3>
<code><a href="../generation/MazeBuilder.html#buildOrder-generation.Order-">buildOrder</a>, <a href="../generation/MazeBuilder.html#dbg-java.lang.String-">dbg</a>, <a href="../generation/MazeBuilder.html#generate--">generate</a>, <a href="../generation/MazeBuilder.html#generateRooms--">generateRooms</a>, <a href="../generation/MazeBuilder.html#getSign-int-">getSign</a>, <a href="../generation/MazeBuilder.html#run--">run</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Runnable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;java.lang.Runnable</h3>
<code>run</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="grid">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>grid</h4>
<pre>private&nbsp;int[][] grid</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="MazeBuilderEller--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeBuilderEller</h4>
<pre>public&nbsp;MazeBuilderEller()</pre>
</li>
</ul>
<a name="MazeBuilderEller-boolean-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MazeBuilderEller</h4>
<pre>public&nbsp;MazeBuilderEller(boolean&nbsp;det)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="generatePathways--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generatePathways</h4>
<pre>protected&nbsp;void&nbsp;generatePathways()</pre>
<div class="block">This method generates pathways into the maze by using Eller's algorithm of randomly merging sets.
 A 2-dimensional array consisting of primitive integers is used as a mirror matrix for the Cells matrix.
 Each int value in the 2-dimensional array grid represents a set.
 In the beginning, every element in the grid is in its own unique set. 
 Sets are merged horizontally randomly, as long as they are not already in the same set. 
 For vertical merging, if a set is alone in a row, it is merged vertically. If the set has multiple values, at least one of the values
 is merged into the next set. Otherwise, sets are merged vertically at random.
 The random decision to merge or not merge is denoted by a boolean coinFlip() method, which returns true or false.
 A merging of sets is represented by the merged set's value being changed to the set it is merging to in the 2-D grid. 
 In the Cells, a merging of sets results in deleting a existing wall in the specified direction.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../generation/MazeBuilder.html#generatePathways--">generatePathways</a></code>&nbsp;in class&nbsp;<code><a href="../generation/MazeBuilder.html" title="class in generation">MazeBuilder</a></code></dd>
</dl>
</li>
</ul>
<a name="mergeHorizontally-int:A:A-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mergeHorizontally</h4>
<pre>protected&nbsp;void&nbsp;mergeHorizontally(int[][]&nbsp;grid,
                                 int&nbsp;x,
                                 int&nbsp;y)</pre>
<div class="block">Performs a horizontal merger of sets, both in the 2-D mirror grid, as well as the actual Maze Cell. 
 A merger in the 2-D mirror is done by changing the value of the cell to the set it is being merged to.
 A merger in the Cells matrix is done by deleting the wall in the specified direction.
 Cells are merged at random if two cells are not in the same set already.
 After two sets are merged, all the values in the set in the 2-D mirror grid are changed to the set as well.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>grid</code> - </dd>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
</dl>
</li>
</ul>
<a name="mergeLastRow-int:A:A-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mergeLastRow</h4>
<pre>protected&nbsp;void&nbsp;mergeLastRow(int[][]&nbsp;grid,
                            int&nbsp;x,
                            int&nbsp;y)</pre>
<div class="block">Horizontally merges all the sets in the last row into one single set. 
 Performs a horizontal merger of sets, both in the 2-D mirror grid, as well as the actual Maze Cell. 
 A merger in the 2-D mirror is done by changing the value of the cell to the set it is being merged to.
 A merger in the Cells matrix is done by deleting the wall in the specified direction.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>grid</code> - </dd>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
</dl>
</li>
</ul>
<a name="mergeVertically-int:A:A-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mergeVertically</h4>
<pre>protected&nbsp;void&nbsp;mergeVertically(int[][]&nbsp;grid,
                               int&nbsp;x,
                               int&nbsp;y,
                               int&nbsp;count)</pre>
<div class="block">Performs a vertical merger of sets, both in the 2-D mirror grid, as well as the actual Maze Cell. 
 A merger in the 2-D mirror is done by changing the value of the cell to the set it is being merged to.
 A merger in the Cells matrix is done by deleting the wall in the specified direction.
 After two sets are merged, all the values in the set in the 2-D mirror grid are changed to the set as well. 
 If a set only contains one element, that set is merged into the next row.
 Otherwise, at least one element from each set is merged into the next row. This element is chosen randomly out of all
 the possible elements in that set. 
 The rest of the elements in a multi-element set are merged at random.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>grid</code> - </dd>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
</dl>
</li>
</ul>
<a name="countValues-int:A:A-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countValues</h4>
<pre>private&nbsp;int&nbsp;countValues(int[][]&nbsp;grid,
                        int&nbsp;x,
                        int&nbsp;y)</pre>
<div class="block">Counts the number of times a value appears in the 2-D mirror grid. 
 This represents the number of elements a set contains.
 Used to see if there are any sets that contain only one element - in which case this set must be
 merged vertically to the next row. 
 Used in generatePathways() and mergeVertically().</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>grid</code> - </dd>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="flipCoin--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flipCoin</h4>
<pre>private&nbsp;boolean&nbsp;flipCoin()</pre>
<div class="block">Returns a random boolean, either true or false.
 Used to "flip a coin" to see whether to merge a set horizontally/vertically or not at random; only used 
 if they are not already required to be merged.
 Used in mergeHorizontally() and mergeVertically().</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="getGrid--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getGrid</h4>
<pre>protected&nbsp;int[][]&nbsp;getGrid()</pre>
<div class="block">Helper method to get grid for test cases</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeBuilderEller.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/MazeBuilder.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/MazeBuilderEllerTest.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/MazeBuilderEller.html" target="_top">Frames</a></li>
<li><a href="MazeBuilderEller.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
