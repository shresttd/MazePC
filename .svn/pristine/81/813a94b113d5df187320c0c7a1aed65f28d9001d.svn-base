<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 26 23:43:24 EDT 2016 -->
<title>MazeBuilder</title>
<meta name="date" content="2016-09-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="MazeBuilder";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":9,"i2":10,"i3":10,"i4":10,"i5":9,"i6":10,"i7":10,"i8":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeBuilder.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Factory.html" title="interface in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/MazeBuilderEller.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/MazeBuilder.html" target="_top">Frames</a></li>
<li><a href="MazeBuilder.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class MazeBuilder" class="title">Class MazeBuilder</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>generation.MazeBuilder</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.lang.Runnable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../generation/MazeBuilderEller.html" title="class in generation">MazeBuilderEller</a>, <a href="../generation/MazeBuilderPrim.html" title="class in generation">MazeBuilderPrim</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">MazeBuilder</span>
extends java.lang.Object
implements java.lang.Runnable</pre>
<div class="block">This class has the responsibility to create a maze of given dimensions (width, height) 
 together with a solution based on a distance matrix.
 The MazeBuilder implements Runnable such that it can be run a separate thread.
 The MazeFactory has a MazeBuilder and handles the thread management.   
 
 This code is refactored code from Maze.java by Paul Falstad, www.falstad.com, Copyright (C) 1998, all rights reserved
 Paul Falstad granted permission to modify and use code for teaching purposes.
 Refactored by Peter Kemper</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected <a href="../generation/Cells.html" title="class in generation">Cells</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#cells">cells</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected <a href="../generation/Distance.html" title="class in generation">Distance</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#dists">dists</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#expectedPartiters">expectedPartiters</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#height">height</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#MAX_ROOM_DIMENSION">MAX_ROOM_DIMENSION</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#MAX_TRIES">MAX_TRIES</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#MIN_ROOM_DIMENSION">MIN_ROOM_DIMENSION</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) <a href="../generation/Order.html" title="interface in generation">Order</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#order">order</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected <a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#random">random</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#rooms">rooms</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) static long</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#SLEEP_INTERVAL">SLEEP_INTERVAL</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#startx">startx</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>protected int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#starty">starty</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#width">width</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#MazeBuilder--">MazeBuilder</a></span>()</code>
<div class="block">Constructor for a randomized maze generation</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#MazeBuilder-boolean-">MazeBuilder</a></span>(boolean&nbsp;deterministic)</code>
<div class="block">Constructor with option to make maze generation deterministic or random</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#buildOrder-generation.Order-">buildOrder</a></span>(<a href="../generation/Order.html" title="interface in generation">Order</a>&nbsp;order)</code>
<div class="block">Sets internal fields according to given order</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>(package private) static void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#dbg-java.lang.String-">dbg</a></span>(java.lang.String&nbsp;str)</code>
<div class="block">Debug output</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#generate--">generate</a></span>()</code>
<div class="block">This method generates a maze.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#generatePathways--">generatePathways</a></span>()</code>
<div class="block">This method generates pathways into the maze.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>protected int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#generateRooms--">generateRooms</a></span>()</code>
<div class="block">Generate all rooms in a given maze where initially all walls are up.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#getSign-int-">getSign</a></span>(int&nbsp;num)</code>
<div class="block">Provides the sign of a given integer number</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#placeRoom--">placeRoom</a></span>()</code>
<div class="block">Allocates space for a room of random dimensions in the maze.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#reset--">reset</a></span>()</code>
<div class="block">Reset all fields to initial values</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/MazeBuilder.html#run--">run</a></span>()</code>
<div class="block">Main method to run construction of a new maze in a thread of its own.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="width">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>width</h4>
<pre>protected&nbsp;int width</pre>
</li>
</ul>
<a name="height">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>height</h4>
<pre>protected&nbsp;int height</pre>
</li>
</ul>
<a name="rooms">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rooms</h4>
<pre>private&nbsp;int rooms</pre>
</li>
</ul>
<a name="expectedPartiters">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>expectedPartiters</h4>
<pre>private&nbsp;int expectedPartiters</pre>
</li>
</ul>
<a name="startx">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startx</h4>
<pre>protected&nbsp;int startx</pre>
</li>
</ul>
<a name="starty">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>starty</h4>
<pre>protected&nbsp;int starty</pre>
</li>
</ul>
<a name="cells">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cells</h4>
<pre>protected&nbsp;<a href="../generation/Cells.html" title="class in generation">Cells</a> cells</pre>
</li>
</ul>
<a name="dists">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dists</h4>
<pre>protected&nbsp;<a href="../generation/Distance.html" title="class in generation">Distance</a> dists</pre>
</li>
</ul>
<a name="random">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>random</h4>
<pre>protected&nbsp;<a href="../generation/SingleRandom.html" title="class in generation">SingleRandom</a> random</pre>
</li>
</ul>
<a name="order">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>order</h4>
<pre><a href="../generation/Order.html" title="interface in generation">Order</a> order</pre>
</li>
</ul>
<a name="SLEEP_INTERVAL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>SLEEP_INTERVAL</h4>
<pre>static final&nbsp;long SLEEP_INTERVAL</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.MazeBuilder.SLEEP_INTERVAL">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="MAX_TRIES">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MAX_TRIES</h4>
<pre>static final&nbsp;int MAX_TRIES</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.MazeBuilder.MAX_TRIES">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="MIN_ROOM_DIMENSION">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MIN_ROOM_DIMENSION</h4>
<pre>static final&nbsp;int MIN_ROOM_DIMENSION</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.MazeBuilder.MIN_ROOM_DIMENSION">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="MAX_ROOM_DIMENSION">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MAX_ROOM_DIMENSION</h4>
<pre>static final&nbsp;int MAX_ROOM_DIMENSION</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.MazeBuilder.MAX_ROOM_DIMENSION">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="MazeBuilder--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MazeBuilder</h4>
<pre>public&nbsp;MazeBuilder()</pre>
<div class="block">Constructor for a randomized maze generation</div>
</li>
</ul>
<a name="MazeBuilder-boolean-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>MazeBuilder</h4>
<pre>public&nbsp;MazeBuilder(boolean&nbsp;deterministic)</pre>
<div class="block">Constructor with option to make maze generation deterministic or random</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="buildOrder-generation.Order-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>buildOrder</h4>
<pre>public&nbsp;void&nbsp;buildOrder(<a href="../generation/Order.html" title="interface in generation">Order</a>&nbsp;order)</pre>
<div class="block">Sets internal fields according to given order</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>order</code> - </dd>
</dl>
</li>
</ul>
<a name="run--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>run</h4>
<pre>public&nbsp;void&nbsp;run()</pre>
<div class="block">Main method to run construction of a new maze in a thread of its own.
 This method is called by the MazeFactory to generate a maze.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
</dl>
</li>
</ul>
<a name="reset--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre>private&nbsp;void&nbsp;reset()</pre>
<div class="block">Reset all fields to initial values</div>
</li>
</ul>
<a name="generateRooms--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generateRooms</h4>
<pre>protected&nbsp;int&nbsp;generateRooms()</pre>
<div class="block">Generate all rooms in a given maze where initially all walls are up. Rooms are placed randomly and of random sizes
 such that the maze can turn out to be too small to accommodate the requested number of rooms (class attribute rooms). 
 In that case less rooms are produced.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>generated number of rooms</dd>
</dl>
</li>
</ul>
<a name="placeRoom--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>placeRoom</h4>
<pre>private&nbsp;boolean&nbsp;placeRoom()</pre>
<div class="block">Allocates space for a room of random dimensions in the maze.
 The position of the room is chosen randomly. The method is not sophisticated 
 such that the attempt may fail even if the maze has ample space to accommodate 
 a room of the chosen size.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if room is successfully placed, false otherwise</dd>
</dl>
</li>
</ul>
<a name="generate--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generate</h4>
<pre>protected&nbsp;void&nbsp;generate()</pre>
<div class="block">This method generates a maze.
 It computes distances, determines a start and exit position that are as far apart as possible.</div>
</li>
</ul>
<a name="generatePathways--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>generatePathways</h4>
<pre>protected&nbsp;void&nbsp;generatePathways()</pre>
<div class="block">This method generates pathways into the maze.
 Comments have been removed to make students 
 recognize the difference between readable and unreadable code
 and what kind of comments are needed to understand code.
 A previous version is kept below and commented out which is 
 even worse than this one.</div>
</li>
</ul>
<a name="getSign-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSign</h4>
<pre>public static&nbsp;int&nbsp;getSign(int&nbsp;num)</pre>
<div class="block">Provides the sign of a given integer number</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>num</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>-1 if num < 0, 0 if num == 0, 1 if num > 0</dd>
</dl>
</li>
</ul>
<a name="dbg-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>dbg</h4>
<pre>static&nbsp;void&nbsp;dbg(java.lang.String&nbsp;str)</pre>
<div class="block">Debug output</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>str</code> - </dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/MazeBuilder.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/Factory.html" title="interface in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/MazeBuilderEller.html" title="class in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/MazeBuilder.html" target="_top">Frames</a></li>
<li><a href="MazeBuilder.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
