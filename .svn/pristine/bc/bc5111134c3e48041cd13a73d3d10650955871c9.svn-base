<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Sep 26 23:43:24 EDT 2016 -->
<title>Distance</title>
<meta name="date" content="2016-09-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Distance";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Distance.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/CellsTest.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/Factory.html" title="interface in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/Distance.html" target="_top">Frames</a></li>
<li><a href="Distance.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class Distance" class="title">Class Distance</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>generation.Distance</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">Distance</span>
extends java.lang.Object</pre>
<div class="block">This class has the responsibility to provide the distance for each cell to the exit of a maze.
 It encapsulates the distance matrix.  
 All methods assume that given (x,y) coordinates are with its legal range [0,width-1],[0,height-1] such that no 
 additional parameter checks are performed. This is reasonable as this class is used only internally to the package.
 
 This code is refactored code from MazeBuilder.java by Paul Falstad, www.falstad.com, Copyright (C) 1998, all rights reserved
 Paul Falstad granted permission to modify and use code for teaching purposes.
 Refactored by Peter Kemper</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#dists">dists</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#exitposition">exitposition</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#height">height</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) static int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#INFINITY">INFINITY</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#maxDistance">maxDistance</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#startposition">startposition</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#width">width</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/Distance.html#Distance-int:A:A-">Distance</a></span>(int[][]&nbsp;distances)</code>
<div class="block">Constructor</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/Distance.html#Distance-int-int-">Distance</a></span>(int&nbsp;w,
        int&nbsp;h)</code>
<div class="block">Constructor</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#computeDistances-generation.Cells-">computeDistances</a></span>(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells)</code>
<div class="block">Compute distances for given cells object of a maze</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#computeDists-generation.Cells-int-int-">computeDists</a></span>(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
            int&nbsp;ax,
            int&nbsp;ay)</code>
<div class="block">Computes distances to the given position (ax,ay) for all cells in array dists.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#countInfinity--">countInfinity</a></span>()</code>
<div class="block">Counts how often infinity values is present in matrix</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getDistance-int-int-">getDistance</a></span>(int&nbsp;x,
           int&nbsp;y)</code>
<div class="block">Gets the distance value for the given (x,y) position</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getDists--">getDists</a></span>()</code>
<div class="block">Gets access to a width x height array of distances.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getExitPosition--">getExitPosition</a></span>()</code>
<div class="block">Gets exit position</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getMaxDistance--">getMaxDistance</a></span>()</code>
<div class="block">Gets maximum distance present in maze</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getPositionWithMaxDistance--">getPositionWithMaxDistance</a></span>()</code>
<div class="block">Get the position of the entry with the highest value</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getPositionWithMaxDistanceOnBorder--">getPositionWithMaxDistanceOnBorder</a></span>()</code>
<div class="block">Finds the most remote point in the maze somewhere on the border.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>private int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getPositionWithMinDistance--">getPositionWithMinDistance</a></span>()</code>
<div class="block">Get the position of the entry with the smallest value.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#getStartPosition--">getStartPosition</a></span>()</code>
<div class="block">Gets start position</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#isExitPosition-int-int-">isExitPosition</a></span>(int&nbsp;x,
              int&nbsp;y)</code>
<div class="block">Determines if given position is the exit position</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#pushDistanceValuesDFS2-generation.Cells-int-int-">pushDistanceValuesDFS2</a></span>(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
                      int&nbsp;sx,
                      int&nbsp;sy)</code>
<div class="block">Follows a path as far as possible to push small distance values
 into the maze</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#saturateDistances-generation.Cells-">saturateDistances</a></span>(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells)</code>
<div class="block">Fixpoint iteration on distance matrix.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#setAllDistanceValues-int-">setAllDistanceValues</a></span>(int&nbsp;value)</code>
<div class="block">Sets all values in dists to given value</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#setDists-int:A:A-">setDists</a></span>(int[][]&nbsp;dists)</code>
<div class="block">Sets the internal attribute to the given parameter value.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>private <a href="../generation/CardinalDirection.html" title="enum in generation">CardinalDirection</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/Distance.html#updateNeighborDistancesAndDirection-generation.Cells-int-int-">updateNeighborDistancesAndDirection</a></span>(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
                                   int&nbsp;currentX,
                                   int&nbsp;currentY)</code>
<div class="block">Updates distance values for adjacent cells that are reachable
 if value can be reduced to current distance plus 1.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="dists">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dists</h4>
<pre>private&nbsp;int[][] dists</pre>
</li>
</ul>
<a name="width">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>width</h4>
<pre>private&nbsp;int width</pre>
</li>
</ul>
<a name="height">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>height</h4>
<pre>private&nbsp;int height</pre>
</li>
</ul>
<a name="exitposition">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>exitposition</h4>
<pre>private&nbsp;int[] exitposition</pre>
</li>
</ul>
<a name="startposition">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startposition</h4>
<pre>private&nbsp;int[] startposition</pre>
</li>
</ul>
<a name="maxDistance">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>maxDistance</h4>
<pre>private&nbsp;int maxDistance</pre>
</li>
</ul>
<a name="INFINITY">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>INFINITY</h4>
<pre>static final&nbsp;int INFINITY</pre>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.Distance.INFINITY">Constant Field Values</a></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Distance-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Distance</h4>
<pre>public&nbsp;Distance(int&nbsp;w,
                int&nbsp;h)</pre>
<div class="block">Constructor</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>w</code> - is the width</dd>
<dd><code>h</code> - is the height</dd>
</dl>
</li>
</ul>
<a name="Distance-int:A:A-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Distance</h4>
<pre>public&nbsp;Distance(int[][]&nbsp;distances)</pre>
<div class="block">Constructor</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>w</code> - is the width</dd>
<dd><code>h</code> - is the height</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getDists--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDists</h4>
<pre>public&nbsp;int[][]&nbsp;getDists()</pre>
<div class="block">Gets access to a width x height array of distances. 
 Warning, this exposes the internal attribute for read access only. 
 Do not modify entries of the returned array.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>array with distance values</dd>
</dl>
</li>
</ul>
<a name="setDists-int:A:A-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDists</h4>
<pre>public&nbsp;void&nbsp;setDists(int[][]&nbsp;dists)</pre>
<div class="block">Sets the internal attribute to the given parameter value.
 Warning, the array is not copied but directly shared with the environment
 that provides it! This can have undesired side effects. Handle with care!</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>array</code> - with distance values</dd>
</dl>
</li>
</ul>
<a name="getDistance-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDistance</h4>
<pre>public&nbsp;int&nbsp;getDistance(int&nbsp;x,
                       int&nbsp;y)</pre>
<div class="block">Gets the distance value for the given (x,y) position</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x</code> - </dd>
<dd><code>y</code> - </dd>
<dt><span class="returnLabel">Returns:</span></dt>
</dl>
</li>
</ul>
<a name="getPositionWithMaxDistanceOnBorder--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPositionWithMaxDistanceOnBorder</h4>
<pre>private&nbsp;int[]&nbsp;getPositionWithMaxDistanceOnBorder()</pre>
<div class="block">Finds the most remote point in the maze somewhere on the border. 
 Requires that distances have been computed beforehand.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>array of length 2 gives the location (x,y)=(array[0],array[1])</dd>
</dl>
</li>
</ul>
<a name="getPositionWithMaxDistance--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPositionWithMaxDistance</h4>
<pre>private&nbsp;int[]&nbsp;getPositionWithMaxDistance()</pre>
<div class="block">Get the position of the entry with the highest value</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>array of length 2 encodes position (x,y)=(array[0],array[1])</dd>
</dl>
</li>
</ul>
<a name="getPositionWithMinDistance--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPositionWithMinDistance</h4>
<pre>private&nbsp;int[]&nbsp;getPositionWithMinDistance()</pre>
<div class="block">Get the position of the entry with the smallest value. 
 If the values of the distance matrix are accurate, the result is the exit position.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>position with smallest distance</dd>
</dl>
</li>
</ul>
<a name="computeDists-generation.Cells-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computeDists</h4>
<pre>private&nbsp;void&nbsp;computeDists(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
                          int&nbsp;ax,
                          int&nbsp;ay)</pre>
<div class="block">Computes distances to the given position (ax,ay) for all cells in array dists.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cells</code> - provide information on walls between positions</dd>
<dd><code>ax,</code> - position, x coordinate</dd>
<dd><code>ay,</code> - position, y coordinate</dd>
</dl>
</li>
</ul>
<a name="pushDistanceValuesDFS2-generation.Cells-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>pushDistanceValuesDFS2</h4>
<pre>private&nbsp;void&nbsp;pushDistanceValuesDFS2(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
                                    int&nbsp;sx,
                                    int&nbsp;sy)</pre>
<div class="block">Follows a path as far as possible to push small distance values
 into the maze</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cells</code> - needed for checking walls, read only</dd>
<dd><code>sx</code> - starting position</dd>
<dd><code>sy</code> - starting position</dd>
</dl>
</li>
</ul>
<a name="setAllDistanceValues-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setAllDistanceValues</h4>
<pre>private&nbsp;void&nbsp;setAllDistanceValues(int&nbsp;value)</pre>
<div class="block">Sets all values in dists to given value</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>value</code> - </dd>
</dl>
</li>
</ul>
<a name="countInfinity--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>countInfinity</h4>
<pre>private&nbsp;int&nbsp;countInfinity()</pre>
<div class="block">Counts how often infinity values is present in matrix</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>value</code> - </dd>
</dl>
</li>
</ul>
<a name="updateNeighborDistancesAndDirection-generation.Cells-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateNeighborDistancesAndDirection</h4>
<pre>private&nbsp;<a href="../generation/CardinalDirection.html" title="enum in generation">CardinalDirection</a>&nbsp;updateNeighborDistancesAndDirection(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells,
                                                              int&nbsp;currentX,
                                                              int&nbsp;currentY)</pre>
<div class="block">Updates distance values for adjacent cells that are reachable
 if value can be reduced to current distance plus 1.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cells</code> - </dd>
<dd><code>currentX</code> - x coordinate of current position</dd>
<dd><code>currentY</code> - y coordinate of current position</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>direction for a neighbor that has been updated or null if there is none</dd>
</dl>
</li>
</ul>
<a name="saturateDistances-generation.Cells-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>saturateDistances</h4>
<pre>private&nbsp;void&nbsp;saturateDistances(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells)</pre>
<div class="block">Fixpoint iteration on distance matrix.</div>
</li>
</ul>
<a name="computeDistances-generation.Cells-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computeDistances</h4>
<pre>public&nbsp;int[]&nbsp;computeDistances(<a href="../generation/Cells.html" title="class in generation">Cells</a>&nbsp;cells)</pre>
<div class="block">Compute distances for given cells object of a maze</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cells</code> - with maze</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>exit position somewhere on the  border</dd>
</dl>
</li>
</ul>
<a name="getStartPosition--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStartPosition</h4>
<pre>public&nbsp;int[]&nbsp;getStartPosition()</pre>
<div class="block">Gets start position</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>start position somewhere within maze</dd>
</dl>
</li>
</ul>
<a name="getExitPosition--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExitPosition</h4>
<pre>public&nbsp;int[]&nbsp;getExitPosition()</pre>
<div class="block">Gets exit position</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>exit position somewhere on the border</dd>
</dl>
</li>
</ul>
<a name="getMaxDistance--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMaxDistance</h4>
<pre>public&nbsp;int&nbsp;getMaxDistance()</pre>
<div class="block">Gets maximum distance present in maze</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>maximum distance</dd>
</dl>
</li>
</ul>
<a name="isExitPosition-int-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isExitPosition</h4>
<pre>public&nbsp;boolean&nbsp;isExitPosition(int&nbsp;x,
                              int&nbsp;y)</pre>
<div class="block">Determines if given position is the exit position</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Distance.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/CellsTest.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../generation/Factory.html" title="interface in generation"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/Distance.html" target="_top">Frames</a></li>
<li><a href="Distance.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
