package falstad;

import java.awt.Event;
import java.awt.event.KeyEvent;

import generation.Distance;

public class ManualDriver implements RobotDriver{

	//MazeController mazeController ;
	
	Distance distance ;	
	int width ;
	int height ;
	int pathLength ;
    
	Robot robot ;
	
	//SimpleKeyListener listener ;
	//MazeApplication mazeApp ;
	
	public ManualDriver() {
		// TODO Auto-generated constructor stub
		pathLength = 0 ;
		
	}

	@Override
	public void setRobot(Robot r) {
		// TODO Auto-generated method stub
		this.robot = r;
	}

	@Override
	public void setDimensions(int width, int height) {
		// TODO Auto-generated method stub
		
		assert (width >= 0);
		assert (height >= 0);
		
		this.width = width;
		this.height = height;
	}

	@Override
	public void setDistance(Distance distance) {
		// TODO Auto-generated method stub
		
		assert (null != distance) ; 

		this.distance = distance;
	}

	@Override
	public boolean drive2Exit() throws Exception {
		// TODO Auto-generated method stub
		
		if (robot.getBatteryLevel() > 0) {
			return true;
		}
		return false;
	}

	@Override
	public float getEnergyConsumption() {
		// TODO Auto-generated method stub
		System.out.println(getPathLength());
		return BasicRobot.INITIAL_BATTERY_LEVEL - robot.getBatteryLevel();
	
	}

	@Override
	public int getPathLength() {
		// TODO Auto-generated method stub
		
		//robot = ( BasicRobot ) robot ;
		
		//return robot.pathLength;
		//return BasicRobot.pathLength ;
		return this.pathLength ;
	}
	
	public boolean keyDown(int key) {
		//robot.move(distance);
		System.out.print(key);
		switch (key) { 
		case 107 : {
			robot.move(1, true);
			this.pathLength ++ ;
		}
		case 106 : {
			robot.rotate(Robot.Turn.LEFT) ; 			
		}
		case 108 : {
			robot.rotate(Robot.Turn.RIGHT) ;
			
		}
		case 104 : {			
		}
		default : { }
		}
		return true ;
	}
	

}
